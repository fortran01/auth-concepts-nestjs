name: NestJS Authentication Demo CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: |
          # Run npm install instead of npm ci to update the lock file
          npm install

      - name: Lint
        run: npm run lint

      - name: Set up environment variables
        run: |
          cp .env.example .env
          # Set test-specific environment variables if needed
          echo "JWT_SECRET=test-secret-for-ci" >> .env
          echo "NODE_ENV=test" >> .env
          echo "AUTH0_DOMAIN=test-domain.auth0.com" >> .env
          echo "AUTH0_CLIENT_ID=test-client-id" >> .env
          echo "AUTH0_CLIENT_SECRET=test-client-secret" >> .env
          echo "AUTH0_CALLBACK_URL=http://localhost:3000/auth0/callback" >> .env
          echo "AUTH0_LOGOUT_URL=http://localhost:3000" >> .env

      - name: Unit tests
        run: npm run test

      - name: E2E tests
        run: npm run test:e2e

      - name: Auth-specific unit tests
        run: npm run test:auth

      - name: Auth-specific E2E tests
        run: npm run test:auth:e2e

      - name: Session-specific unit tests
        run: npm run test:session

      - name: Session-specific E2E tests
        run: npm run test:session:e2e

      - name: LDAP-specific unit tests
        run: npm run test:ldap

      - name: LDAP-specific E2E tests
        run: npm run test:ldap:e2e

      - name: Auth0-specific unit tests
        run: npm run test:auth0

      - name: Auth0-specific E2E tests
        run: npm run test:auth0:e2e

      - name: Debug-specific unit tests
        run: npm run test:debug

      - name: Debug-specific E2E tests
        run: npm run test:debug:e2e

      - name: CORS-specific unit tests
        run: npm run test:cors

      - name: CORS-specific E2E tests
        run: npm test -- --testPathPattern=test/cors.*\\.spec\\.ts

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Verify build
        run: |
          # Check if the build was successful
          if [ -d "dist" ]; then
            echo "Build successful"
          else
            echo "Build failed - dist directory not found"
            exit 1
          fi

      # Uncomment to add deployment steps if needed
      # - name: Deploy
      #   if: github.ref == 'refs/heads/main'
      #   run: |
      #     # Add deployment commands here
