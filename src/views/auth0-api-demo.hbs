<!DOCTYPE html>
<html>
<head>
  <title>{{ title }}</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.auth0.com/js/auth0-spa-js/2.0/auth0-spa-js.production.js"></script>
  <style>
    body { padding: 20px; }
    .api-response { white-space: pre-wrap; height: 300px; overflow-y: auto; }
    .card { margin-bottom: 20px; }
    .code { font-family: monospace; background-color: #f5f5f5; padding: 10px; border-radius: 5px; }
    .nav-back { margin-bottom: 15px; }
  </style>
</head>
<body>
  <div class="container">
    <!-- Navigation back to home -->
    <div class="nav-back">
      <a href="/" class="btn btn-outline-secondary btn-sm">
        &larr; Back to Home
      </a>
    </div>
    
    <!-- Configuration warnings -->
    {{#unless isConfigValid}}
    <div class="alert alert-warning mt-3" role="alert">
      <h4 class="alert-heading">Auth0 Configuration Issues</h4>
      <p>There are problems with your Auth0 configuration that may prevent this demo from working correctly:</p>
      <ul class="mb-0">
        {{#each configWarnings}}
        <li>{{this}}</li>
        {{/each}}
      </ul>
      <hr>
      <p class="mb-0">
        Please check your <code>.env</code> file and configure the Auth0 API settings properly.
        Visit <a href="/auth0-api-debug" class="alert-link">Auth0 API Debug</a> for more information.
      </p>
    </div>
    {{/unless}}

    <h1>{{ title }}</h1>
    <p class="lead">This demo shows how to secure a NestJS API with Auth0 authentication</p>

    <div class="row mt-4">
      <div class="col-md-6">
        <div class="card">
          <div class="card-header bg-primary text-white">
            <h5 class="card-title mb-0">Public API</h5>
          </div>
          <div class="card-body">
            <p>This endpoint is publicly accessible without authentication</p>
            <button id="callPublicApi" class="btn btn-outline-primary">Call Public API</button>
            <div class="mt-3">
              <div class="code">GET /api/auth0/public</div>
            </div>
          </div>
        </div>
        
        <div class="card">
          <div class="card-header bg-success text-white">
            <h5 class="card-title mb-0">Protected API</h5>
          </div>
          <div class="card-body">
            <p>This endpoint requires a valid Auth0 access token</p>
            <button id="callProtectedApi" class="btn btn-outline-success">Call Protected API</button>
            <div class="mt-3">
              <div class="code">GET /api/auth0/protected</div>
              <div class="code mt-2">Authorization: Bearer {token}</div>
            </div>
          </div>
        </div>
      </div>
      
      <div class="col-md-6">
        <div class="card">
          <div class="card-header bg-dark text-white">
            <h5 class="card-title mb-0">API Response</h5>
          </div>
          <div class="card-body">
            <pre id="apiResponse" class="api-response border p-3"></pre>
          </div>
        </div>
      </div>
    </div>
    
    <div class="card mt-4">
      <div class="card-header bg-info text-white">
        <h5 class="card-title mb-0">Current Token</h5>
      </div>
      <div class="card-body">
        <p id="tokenStatus">No token available. Get a token first.</p>
        <button id="getToken" class="btn btn-outline-info">Get New Token</button>
      </div>
    </div>
    
    <div class="card mt-4">
      <div class="card-header bg-secondary text-white">
        <h5 class="card-title mb-0">Auth0 Configuration</h5>
      </div>
      <div class="card-body">
        <dl class="row">
          <dt class="col-sm-3">Domain:</dt>
          <dd class="col-sm-9">{{ domain }}</dd>
          
          <dt class="col-sm-3">Audience:</dt>
          <dd class="col-sm-9">{{ audience }}</dd>
        </dl>
      </div>
    </div>
    
    <!-- How it works section -->
    <div class="card mt-4">
      <div class="card-header bg-light">
        <h5 class="card-title mb-0">How it Works</h5>
      </div>
      <div class="card-body">
        <p>This demo demonstrates Auth0's Machine-to-Machine (M2M) authentication flow:</p>
        <ol>
          <li>Click <strong>Get New Token</strong> to request an access token from Auth0</li>
          <li>The server makes a call to Auth0's <code>/oauth/token</code> endpoint with client credentials</li>
          <li>Auth0 returns a JWT token with the appropriate audience and scopes</li>
          <li>Use this token to access protected API endpoints</li>
        </ol>
        <p>The API protection is implemented using:</p>
        <ul>
          <li>Auth0JwtStrategy - Validates tokens with Auth0's JWKS endpoint</li>
          <li>Auth0JwtGuard - Protects routes requiring Auth0 authentication</li>
          <li>Audience validation - Ensures tokens are intended for this API</li>
        </ul>
      </div>
    </div>

    <div class="card mt-4" id="troubleshooting-section" style="display: none;">
      <div class="card-header bg-warning text-dark">
        <h5 class="card-title mb-0">Troubleshooting</h5>
      </div>
      <div class="card-body">
        <h6>Common Issues</h6>
        <ul>
          <li><strong>Unauthorized errors</strong>: Check that your Auth0 M2M application has permission to access the API</li>
          <li><strong>Invalid client errors</strong>: Verify the client ID and secret are correct</li>
          <li><strong>Invalid audience</strong>: Make sure the audience matches your Auth0 API identifier</li>
        </ul>
        
        <h6>Configuration Check</h6>
        <ol>
          <li>Visit <a href="/auth0-api-debug" target="_blank">/auth0-api-debug</a> to verify your Auth0 configuration</li>
          <li>In Auth0 Dashboard, go to <strong>Applications > APIs</strong> and check if your API exists</li>
          <li>Verify the API identifier matches your <code>AUTH0_API_AUDIENCE</code> value</li>
          <li>Go to <strong>Applications > Applications</strong> and find your M2M application</li>
          <li>Verify the client ID matches your <code>AUTH0_M2M_CLIENT_ID</code> value</li>
          <li>Check the API permissions on the M2M application</li>
        </ol>
        
        <a href="https://auth0.com/docs/get-started/authentication-and-authorization-flow/client-credentials-flow" 
           target="_blank" class="btn btn-outline-info">
          Read Auth0 M2M Documentation
        </a>
      </div>
    </div>
  </div>
  
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      let accessToken = null;
      const apiBaseUrl = '{{ apiUrl }}';
      const responseEl = document.getElementById('apiResponse');
      const tokenStatusEl = document.getElementById('tokenStatus');
      const troubleshootingSection = document.getElementById('troubleshooting-section');
      
      // Update the response display
      function updateResponse(data, isError = false) {
        responseEl.textContent = JSON.stringify(data, null, 2);
        responseEl.className = isError ? 
          'api-response border p-3 bg-danger text-white' : 
          'api-response border p-3';
        
        // Show troubleshooting section if there's an error
        if (isError) {
          troubleshootingSection.style.display = 'block';
        } else {
          troubleshootingSection.style.display = 'none';
        }
      }
      
      // Get a token from the server
      document.getElementById('getToken').addEventListener('click', async () => {
        try {
          updateResponse({ message: 'Getting token...' });
          const response = await fetch(`${apiBaseUrl}/auth0-api-demo/get-token`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            }
          });
          
          const data = await response.json();
          
          if (data.success && data.access_token) {
            accessToken = data.access_token;
            tokenStatusEl.textContent = `Token received: ${accessToken.substring(0, 10)}...`;
            updateResponse({ 
              message: 'Token received successfully', 
              token_type: data.token_type,
              expires_in: data.expires_in
            });
          } else {
            updateResponse({ error: 'Failed to get token', details: data }, true);
          }
        } catch (error) {
          updateResponse({ error: 'Error getting token', message: error.message }, true);
        }
      });
      
      // Call the public API
      document.getElementById('callPublicApi').addEventListener('click', async () => {
        try {
          updateResponse({ message: 'Calling public API...' });
          
          const response = await fetch(`${apiBaseUrl}/api/auth0/public`);
          const data = await response.json();
          
          updateResponse(data);
        } catch (error) {
          updateResponse({ error: 'Error calling public API', message: error.message }, true);
        }
      });
      
      // Call the protected API
      document.getElementById('callProtectedApi').addEventListener('click', async () => {
        if (!accessToken) {
          return updateResponse({ error: 'No access token available. Please get a token first.' }, true);
        }
        
        try {
          updateResponse({ message: 'Calling protected API...' });
          
          const response = await fetch(`${apiBaseUrl}/api/auth0/protected`, {
            headers: {
              'Authorization': `Bearer ${accessToken}`
            }
          });
          
          const data = await response.json();
          
          updateResponse(data);
        } catch (error) {
          updateResponse({ error: 'Error calling protected API', message: error.message }, true);
        }
      });
    });
  </script>
</body>
</html> 